import telebot

TOKEN = "7650499504:AAFZkcgGVbq_mA4m6k6GXVkCsz5de9cfZqE"

bot = telebot.TeleBot(TOKEN)

sizes = {
    '1': "–ú–∞–ª–µ–Ω—å–∫–∞ (200 –º–ª)",
    '2': "–°–µ—Ä–µ–¥–Ω—è (350 –º–ª)",
    '3': "–í–µ–ª–∏–∫–∞ (500 –º–ª)"
}

shapes = {
    '1': "–ö—Ä—É–≥–ª–∞",
    '2': "–ö–≤–∞–¥—Ä–∞—Ç–Ω–∞",
    '3': "–ó –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º"
}

patterns = {
    '1': "–ö–≤—ñ—Ç–∏ üå∏",
    '2': "–ì–æ—Ä–∏ ‚õ∞Ô∏è",
    '3': "–ö–æ—Å–º–æ—Å üåå",
    '4': "–¢–≤–∞—Ä–∏–Ω–∏ üêæ",
    '5': "–ê–±—Å—Ç—Ä–∞–∫—Ü—ñ—è üé®",
    '6': "–í–∞—à —Ç–µ–∫—Å—Ç üñãÔ∏è (–Ω–∞–ø–∏—à—ñ—Ç—å —É –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—ñ)"
}

user_choices = {}

@bot.message_handler(commands=['start'])
def welcome(message):
    user_choices[message.chat.id] = {}
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤—î—Ç! –¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –¥–∏–∑–∞–π–Ω –¥–ª—è —á–∞—à–∫–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–∞ –ø–æ–¥–∞—Ä—É–Ω–æ–∫. –°–ø–æ—á–∞—Ç–∫—É –≤–∏–±–µ—Ä–µ–º–æ —Ä–æ–∑–º—ñ—Ä:\n"
        "1. –ú–∞–ª–µ–Ω—å–∫–∞ (200 –º–ª)\n"
        "2. –°–µ—Ä–µ–¥–Ω—è (350 –º–ª)\n"
        "3. –í–µ–ª–∏–∫–∞ (500 –º–ª)\n"
        "–í–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä —Ä–æ–∑–º—ñ—Ä—É."
    )

@bot.message_handler(func=lambda message: message.chat.id in user_choices and 'size' not in user_choices[message.chat.id])
def choose_size(message):
    size_choice = message.text.strip()

    if size_choice in sizes:
        user_choices[message.chat.id]['size'] = sizes[size_choice]
        user_choices[message.chat.id]['size_code'] = size_choice
        bot.send_message(
            message.chat.id,
            f"–í–∏ –æ–±—Ä–∞–ª–∏ —Ä–æ–∑–º—ñ—Ä: {sizes[size_choice]}.\n\n"
            "–¢–µ–ø–µ—Ä –≤–∏–±–µ—Ä—ñ—Ç—å —Ñ–æ—Ä–º—É —á–∞—à–∫–∏:\n"
            "1. –ö—Ä—É–≥–ª–∞\n"
            "2. –ö–≤–∞–¥—Ä–∞—Ç–Ω–∞\n"
            "3. –ó –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º\n"
            "–í–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä —Ñ–æ—Ä–º–∏."
        )
    else:
        bot.send_message(message.chat.id, "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –í–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä —Ä–æ–∑–º—ñ—Ä—É (1, 2 –∞–±–æ 3).")

@bot.message_handler(func=lambda message: message.chat.id in user_choices and 'size' in user_choices[message.chat.id] and 'shape' not in user_choices[message.chat.id])
def choose_shape(message):
    shape_choice = message.text.strip()

    if shape_choice in shapes:
        user_choices[message.chat.id]['shape'] = shapes[shape_choice]
        user_choices[message.chat.id]['shape_code'] = shape_choice
        bot.send_message(
            message.chat.id,
            f"–í–∏ –æ–±—Ä–∞–ª–∏ —Ñ–æ—Ä–º—É: {shapes[shape_choice]}.\n\n"
            "–¢–µ–ø–µ—Ä –≤–∏–±–∏—Ä–∞–π—Ç–µ –≤—ñ–∑–µ—Ä—É–Ω–æ–∫ –¥–ª—è —á–∞—à–∫–∏:\n"
            "1. –ö–≤—ñ—Ç–∏\n"
            "2. –ì–æ—Ä–∏\n"
            "3. –ö–æ—Å–º–æ—Å\n"
            "4. –¢–≤–∞—Ä–∏–Ω–∏\n"
            "5. –ê–±—Å—Ç—Ä–∞–∫—Ü—ñ—è\n"
            "6. –í–∞—à –î–∏–∑–∞–π–Ω –∞–±–æ –¢–µ–∫—Å—Ç (–Ω–∞–ø–∏—à—ñ—Ç—å —É –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ).\n"
            "–í–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä –≤—ñ–∑–µ—Ä—É–Ω–∫–∞."
        )
    else:
        bot.send_message(message.chat.id, "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –í–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä —Ñ–æ—Ä–º–∏ (1, 2 –∞–±–æ 3).")

@bot.message_handler(func=lambda message: message.chat.id in user_choices and 'shape' in user_choices[message.chat.id] and 'pattern' not in user_choices[message.chat.id])
def choose_pattern(message):
    pattern_choice = message.text.strip()

    if pattern_choice in patterns:
        if pattern_choice == '6':
            user_choices[message.chat.id]['pattern'] = "–í–∞—à —Ç–µ–∫—Å—Ç (–Ω–∞–ø–∏—à—ñ—Ç—å —É –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ)"
            bot.send_message(message.chat.id, "–ù–∞–ø–∏—à—ñ—Ç—å —Ç–µ–∫—Å—Ç, —è–∫–∏–π –≤–∏ —Ö–æ—á–µ—Ç–µ –Ω–∞–Ω–µ—Å—Ç–∏ –Ω–∞ —á–∞—à–∫—É.")
        else:
            user_choices[message.chat.id]['pattern'] = patterns[pattern_choice]
            user_choices[message.chat.id]['pattern_code'] = pattern_choice
            confirm_order(message)
    else:
        bot.send_message(message.chat.id, "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –í–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä –≤—ñ–∑–µ—Ä—É–Ω–∫–∞ (1, 2, 3, 4, 5 –∞–±–æ 6).")

@bot.message_handler(func=lambda message: message.chat.id in user_choices and user_choices[message.chat.id].get('pattern') == "–í–∞—à —Ç–µ–∫—Å—Ç (–Ω–∞–ø–∏—à—ñ—Ç—å —É –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ)")
def add_custom_text(message):
    user_choices[message.chat.id]['pattern'] = f"–í–∞—à —Ç–µ–∫—Å—Ç: {message.text}"
    user_choices[message.chat.id]['pattern_code'] = 'custom'
    confirm_order(message)

def confirm_order(message):
    choices = user_choices[message.chat.id]
    bot.send_message(
        message.chat.id,
        f"–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n"
        f"–†–æ–∑–º—ñ—Ä —á–∞—à–∫–∏: {choices['size']}\n"
        f"–§–æ—Ä–º–∞ —á–∞—à–∫–∏: {choices['shape']}\n"
        f"–í—ñ–∑–µ—Ä—É–Ω–æ–∫: {choices['pattern']}\n\n"
        "–Ø–∫—â–æ –≤—Å–µ –≤—ñ—Ä–Ω–æ, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /confirm –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∞–±–æ /cancel –¥–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è."
    )

@bot.message_handler(commands=['confirm'])
def confirm(message):
    if message.chat.id in user_choices and user_choices[message.chat.id]:
        choices = user_choices[message.chat.id]
        bot.send_message(
            message.chat.id,
            f"–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!\n\n"
            f"–†–æ–∑–º—ñ—Ä —á–∞—à–∫–∏: {choices['size']}\n"
            f"–§–æ—Ä–º–∞ —á–∞—à–∫–∏: {choices['shape']}\n"
            f"–í—ñ–∑–µ—Ä—É–Ω–æ–∫: {choices['pattern']}\n"
            "–î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è! –ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π."
        )
        user_choices[message.chat.id] = {}
    else:
        bot.send_message(message.chat.id, "–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –ü–æ—á–Ω—ñ—Ç—å –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–æ—é /start.")

@bot.message_handler(commands=['cancel'])
def cancel(message):
    if message.chat.id in user_choices and user_choices[message.chat.id]:
        user_choices[message.chat.id] = {}
        bot.send_message(message.chat.id, "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
    else:
        bot.send_message(message.chat.id, "–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è.")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    bot.send_message(message.chat.id, "–í–∏–±–∞—á—Ç–µ, —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫")

bot.polling(none_stop=True)
